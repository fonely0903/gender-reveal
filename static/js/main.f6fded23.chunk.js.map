{"version":3,"sources":["App.js","Result.js","reportWebVitals.js","index.js"],"names":["serviceAccountAuth","JWT","email","process","key","split","String","raw","join","scopes","App","props","name","setName","useState","isLoading","setIsLoading","onSubmitClick","useCallback","selectedValue","document","querySelector","guess","value","async","doc","GoogleSpreadsheet","loadInfo","sheet","sheetsByIndex","addRow","Name","Guess","submit","then","window","location","class","id","Form","Group","controlId","type","autocomplete","for","Label","Control","style","borderRadius","padding","placeholder","onChange","e","target","Button","size","className","variant","onClick","Spinner","animation","Result","series","setSeries","useEffect","loadCells","girls","getCellByA1","boys","data","color","loadData","isPlaying","duration","colors","colorsTime","onComplete","remainingTime","Image","src","fluid","options","chart","stacked","height","stackType","toolbar","show","plotOptions","bar","horizontal","title","text","fill","opacity","stroke","xaxis","labels","axisBorder","axisTicks","yaxis","grid","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","root","ReactDOM","createRoot","getElementById","router","createHashRouter","path","element","render","StrictMode"],"mappings":"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","file":"static/js/main.f6fded23.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { GoogleSpreadsheet } from 'google-spreadsheet';\nimport { JWT } from 'google-auth-library';\nimport Spinner from 'react-bootstrap/Spinner';\n\nimport './App.css';\n\nconst serviceAccountAuth = new JWT({\n  email: process.env.GOOGLE_SERVICE_ACCOUNT_EMAIL,\n  key: process.env.GOOGLE_PRIVATE_KEY.split(String.raw`\\n`).join('\\n'),\n  scopes: ['https://www.googleapis.com/auth/spreadsheets'],\n});\n\nconst App = props => {\n  const [name, setName] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const submit = async (name, guess) => {\n    const doc = new GoogleSpreadsheet(process.env.SHEET_ID, serviceAccountAuth);\n    await doc.loadInfo();\n    const sheet = doc.sheetsByIndex[0];\n    await sheet.addRow({ Name: name, Guess: guess });\n  }\n\n  const onSubmitClick = useCallback(() => {\n    const selectedValue = document.querySelector('input[name=\"genders\"]:checked')  \n    const guess = selectedValue?.value;\n    setIsLoading(true);\n    submit(name, guess).then(() => {\n      window.location = '/#/result';\n      setIsLoading(false);\n    });\n  }, [name]);\n  \n  return (\n    <div class='container-fluid text-center' id=\"container\">\n      <div class='sector p-3'>\n        <h1 id=\"title_1\" class=\"title\">Gender Reveal</h1>\n        <p class='text-start'>沒有實體的性別趴，只有爸媽自製的小預測網站～好玩就好，男生女生都是我們的寶</p>\n      </div>\n      <div class='hint-sector sector px-3 mb-3'>\n        <h6 id='hintTitle'>媽媽的提示:</h6>\n        <div id='hint'>\n          <h5>1. 媽媽喜歡吃酸</h5>\n          <h5>2. 媽媽皮膚變好</h5>\n          <h5>3. 戒指吊繩前後擺動</h5>\n          <h5>4. 清宮圖說女生</h5>\n        </div>\n      </div>\n      <Form class='p-3'>\n        <Form.Group controlId='genderForm.Gender'>\n          <h2>選出你的預測吧</h2>\n          <div class=\"d-flex justify-content-center\" id=\"gender-radios\">\n            <div>\n              <input type=\"radio\" class=\"btn-check\" name=\"genders\" id=\"girl\" value=\"Phoebe\" autocomplete=\"off\" />\n              <label class=\"btn rounded-circle gender-label\" for=\"girl\">Phoebe <br/>女生</label>\n            </div>\n            <div>\n              <input type=\"radio\" class=\"btn-check\" name=\"genders\" id=\"boy\" value=\"Jensen\" autocomplete=\"off\"/>\n              <label class=\"btn rounded-circle gender-label\" for=\"boy\">Jensen <br/>男生</label>\n            </div>\n          </div>\n        </Form.Group>\n        <Form.Group controlId='genderForm.Name' class='mt-3'>\n          <Form.Label>留下你的名字～</Form.Label>\n          <Form.Control style={{borderRadius: '30px', padding: '12px'}} type=\"text\" placeholder=\"浩仁 / Apple\" onChange={e => setName(e.target.value)} value={name}  />\n        </Form.Group>\n        <Button size='lg' className=\"mt-4\" id=\"submitBtn\" variant='outline-secondary' onClick={onSubmitClick}>\n          {isLoading && <Spinner animation=\"border\" />}看結果！\n        </Button>\n      </Form>\n    </div>\n  )\n};\n\nexport default App;\n","import React, { useEffect, useState } from 'react';\nimport { GoogleSpreadsheet } from 'google-spreadsheet';\nimport { JWT } from 'google-auth-library';\nimport ReactApexChart from \"react-apexcharts\";\nimport Image from 'react-bootstrap/Image';\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer';\n\nimport './Result.css';\n\nconst serviceAccountAuth = new JWT({\n    email: process.env.GOOGLE_SERVICE_ACCOUNT_EMAIL,\n    key: process.env.GOOGLE_PRIVATE_KEY.split(String.raw`\\n`).join('\\n'),\n    scopes: ['https://www.googleapis.com/auth/spreadsheets'],\n});\n\nconst PHOEBE_IMG_PATH = '/gender-reveal/Phoebe.gif';\nconst JENSEN_IMG_PATH = '/gender-reveal/Jensen.gif';\nconst Result = props => {\n    const [series, setSeries] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const options = {\n        chart: {\n            type: 'bar',\n            stacked: true,\n            height: 150,\n            stackType: '100%',\n            toolbar: { show: false }\n        },\n        plotOptions: {\n            bar: {\n                horizontal: true,\n            },\n        },\n        title: {\n            text: '大家是怎麼猜的呢'\n        },\n        fill: {\n            opacity: 1\n        },\n        stroke: { show: false },\n        xaxis: {\n            show: false,\n            labels: { show: false },\n            axisBorder: { show: false },\n            axisTicks: { show: false }\n        },\n        yaxis: { show: false},\n        grid: { show: false },\n    }\n    useEffect(() => {\n        async function loadData() {\n            const doc = new GoogleSpreadsheet(process.env.SHEET_ID, serviceAccountAuth);\n            await doc.loadInfo();\n            const sheet = doc.sheetsByIndex[0];\n            await sheet.loadCells('F2:F3');\n            const girls = sheet.getCellByA1('F2').value;\n            const boys = sheet.getCellByA1('F3').value;\n            setSeries([\n                {name: 'Phoebe', data: [girls], color: '#dbc6cf'},\n                {name: 'Jensen', data: [boys], color: '#a2ccd8'},\n            ])\n        }\n        loadData()\n    }, [])\n    return (\n        <>\n            <div class='container-fluid text-center' id=\"container\">\n                <h2>可愛的小果仁是</h2>\n                {isLoading ? (\n                    <div className=\"count-down-timer\">\n                        <CountdownCircleTimer\n                            isPlaying\n                            duration={3}\n                            colors={['#EECAD5', '#D1E9F6']}\n                            colorsTime={[2, 0]}\n                            onComplete={() => setIsLoading(false)}\n                        >\n                            {({ remainingTime }) => remainingTime}\n                        </CountdownCircleTimer>\n                    </div>\n                ) : (\n                    <>\n                        <h2 class=\"mt-3\">Phoebe!</h2>\n                        <Image src={PHOEBE_IMG_PATH} fluid />\n                        <ReactApexChart options={options} series={series} type=\"bar\" height={150} />\n                    </>\n                )}\n                \n            </div>\n        </>\n    );\n};\n\nResult.propTypes = {\n    \n};\n\nexport default Result;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport Result from './Result';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n  createHashRouter,\n  RouterProvider,\n} from \"react-router-dom\";\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nconst router = createHashRouter(\n  [\n    {\n      path: \"/\",\n      element: <App />,\n    },\n    {\n      path: \"/result\",\n      element: <Result />,\n    }\n  ]\n);\n\nroot.render(\n  <React.StrictMode>\n    <RouterProvider router={router} />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}